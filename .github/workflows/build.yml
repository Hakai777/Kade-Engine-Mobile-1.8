name: Build Kade Engine APK (Legacy Versions)

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  HAXE_VERSION: "4.1.5"      # Versão recomendada
  LIME_VERSION: "7.9.0"      # Versão compatível com Kade 1.8
  OPENFL_VERSION: "8.0.2"    # Alternativa mais compatível (ajuste se necessário)
  ANDROID_API_LEVEL: "33"
  ANDROID_BUILD_TOOLS: "33.0.2"
  NDK_VERSION: "21.4.7075529" # Versão mais compatível com WebM rebuild

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17

    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y wget unzip g++-multilib gcc-multilib neko libgl1-mesa-dev libx11-dev libxi-dev libxrandr-dev libasound2-dev libpulse-dev

    - name: Install Haxe
      run: |
        wget -q https://github.com/HaxeFoundation/haxe/releases/download/${HAXE_VERSION}/haxe-${HAXE_VERSION}-linux64.tar.gz -O /tmp/haxe.tar.gz
        tar -xzf /tmp/haxe.tar.gz -C /tmp
        sudo mv /tmp/haxe_* /opt/haxe
        sudo ln -sf /opt/haxe/haxe /usr/local/bin/haxe
        sudo ln -sf /opt/haxe/haxelib /usr/local/bin/haxelib

    - name: Install Haxe libraries (legacy)
      run: |
        haxelib install lime ${LIME_VERSION} --always
        haxelib install openfl ${OPENFL_VERSION} --always
        haxelib install hxcpp --always
        haxelib install actuate --always
        haxelib install flixel --always
        haxelib install flixel-addons --always
        haxelib install flixel-ui --always
        haxelib install polymod --always
        haxelib install hscript --always
        haxelib git extension-webm https://github.com/KadeDev/extension-webm
        haxelib run lime rebuild extension-webm android
        haxelib run lime setup android --yes

    - name: Setup Android SDK & NDK
      run: |
        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
        cd $ANDROID_SDK_ROOT/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-latest.zip -O cmdline-tools.zip
        unzip -o cmdline-tools.zip
        rm cmdline-tools.zip
        mv cmdline-tools latest
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" "platforms;android-${ANDROID_API_LEVEL}" \
            "build-tools;${ANDROID_BUILD_TOOLS}" "ndk;${NDK_VERSION}"

    - name: Accept licenses
      run: yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses || true

    - name: Build APK
      run: |
        export ANDROID_SDK="$ANDROID_SDK_ROOT"
        export ANDROID_NDK_ROOT="$ANDROID_SDK_ROOT/ndk/${NDK_VERSION}"
        haxelib run lime build android -final -verbose | tee buildlog.txt

    - name: Log and locate APK
      run: |
        echo "Arquivos gerados (com .apk):"
        find . -type f -name '*.apk' -print
        echo "Referências a 'apk' no log:"
        grep -i apk buildlog.txt || echo "Nenhuma referência encontrada"

    - name: Copy and upload APK
      run: |
        mkdir -p apk
        APK=$(find . -type f -name '*.apk' | head -n 1)
        if [ -n "$APK" ]; then
          echo "APK encontrado em: $APK"
          cp "$APK" apk/
        else
          echo "APK não encontrado!"
          exit 1
        fi
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: KadeEngine-APK
        path: apk/
